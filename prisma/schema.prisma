generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum saleType {
  KG
  PACK
  WIEGHT_PACK
  UNIT
}

model OrderItem {
<<<<<<< HEAD
  id            Int      @id @default(autoincrement())
  item          Item     @relation(fields: [itemId], references: [id])
  quantity      Float
  receiptNumber String
  order         Order    @relation(fields: [orderId], references: [id])
  orderId       Int
  itemId        String
  supplier      Supplier @relation(fields: [supplierId], references: [id])
  supplierId    Int
=======
  id         Int      @id @default(autoincrement())
  item       Item     @relation(fields: [itemId], references: [id])
  quantity   Float
  price      Float
  Order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  itemId     String
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId Int
>>>>>>> paljs
}

model Item {
  id          String      @id @default(uuid())
  name        String
  description String
  category    String
  snWebSite   String?
  snHerzelia  String?
  saleType    saleType
  orderItems  OrderItem[]
}

model Order {
  id            Int         @id @default(autoincrement())
  date          DateTime
  supplier      Supplier    @relation(fields: [supplierId], references: [id])
  supplierId    Int
  receiptNumber String?
  /// @onDelete(CASCADE)
  items         OrderItem[]
}

model Supplier {
  id        Int         @id @default(autoincrement())
  name      String
  order     Order[]
  orderItem OrderItem[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")


  @@map(name: "users")
}
